apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImageRepository
metadata:
  name: flask-app
  namespace: default
spec:
  image: 905418054480.dkr.ecr.us-east-1.amazonaws.com/flask-app
  interval: 1h
  provider: generic
  secretRef:
    name: ecr-credentials

---

apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImagePolicy
metadata:
  name: flask-app
  namespace: default
spec:
  imageRepositoryRef:
    name: flask-app
    namespace: default
  policy:
    semver:
      range: ">=0.1.0"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: default
spec:
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
        logging: enabled
      annotations:
        LAST_UPDATED: "PLACEHOLDER"
    spec:
      containers:
        - name: flask-app
          image: 905418054480.dkr.ecr.us-east-1.amazonaws.com/flask-app:0.19.0 # {"$imagepolicy": "default:flask-app"}
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
          ports:
            - containerPort: 5000
          env:
            - name: FLASK_ENV
              value: "production"
            - name: APP_PORT
              value: "5000"
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 5000
            initialDelaySeconds: 20
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 5000
            initialDelaySeconds: 20
            periodSeconds: 5

---

apiVersion: v1
kind: Service
metadata:
  name: flask-app
  namespace: default
spec:
  ports:
    - name: http
      port: 5000
      protocol: TCP
      targetPort: 5000
  selector:
    app: flask-app
  type: ClusterIP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flask-app-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - host: flask-app.k9.askjimrohn.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: flask-app
                port:
                  number: 5000
  tls:
    - hosts:
        - flask-app.k9.askjimrohn.com 
      secretName: flask-app-k9-askjimrohn